#version: '3.9'

services:
  apache:
    build: .docker/apache
    container_name: sf5-apache
    ports:
      - "2000:80"
    volumes:
      - .docker/config/vhosts:/etc/apache2/sites-enabled
      - .:/home/wwwroot/sf5-p2
    depends_on:
      - php

  php:
#    image: donbrico/php-fpm-74:v1.0.0
    build: .docker/php
    container_name: sf5-php
    volumes:
      - .:/home/wwwroot/sf5-p2
    environment:
      - maildev_host=sf5-maildev

  node:
    build: .docker/node
    container_name: sf5-node
    volumes:
      - .:/home/wwwroot/sf5-p2
    command: bash -c "yarn && yarn dev --watch"
    depends_on:
      - php

  database:
    image : donbrico/mysql-80-debian:v1.0.0
    container_name: sf5-mysql
    volumes:
      - ./.docker/data/db:/var/lib/mysql
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--lower_case_table_names=1"
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db-sf5-p2
      MYSQL_PASSWORD: root
    ports:
      - "3326:3306"
    tty: true


  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: sf5-phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
    ports:
      - "8090:80"
    links:
      - database

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

###> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
